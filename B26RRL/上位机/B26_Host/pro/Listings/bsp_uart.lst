C51 COMPILER V9.59.0.0   BSP_UART                                                          05/07/2019 13:50:35 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BSP_UART
OBJECT MODULE PLACED IN .\Objects\bsp_uart.obj
COMPILER INVOKED BY: E:\MDK\C51\BIN\C51.EXE ..\bsp\bsp_uart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\bsp;..\lib;..\TimeOut;.
                    -.\user) DEBUG OBJECTEXTEND PRINT(.\Listings\bsp_uart.lst) TABS(7) OBJECT(.\Objects\bsp_uart.obj)

line level    source

   1          #include "bsp_uart.h"
   2          #include "string.h"
   3          
   4          unsigned char Uart0SendFlag,Uart0ReceiveFlag;
   5          
   6          void Uart_Init(unsigned char Freq,unsigned int BaudRate)
   7          {
   8   1             #if 1
   9   1             P1CON &= 0xF3;
  10   1             P1PH = 0X0C;   //TX/RX为带上拉输入；
  11   1      
  12   1             PCON |= 0x80;    //SMOD = 1；
  13   1             SCON = 0X50;     //设置通信方式为模式一，允许接收
  14   1             T2CON = 0x00;    //使用定时器1作UART时钟
  15   1             TMCON = 0X03;    //定时器时钟为Fsys
  16   1             TMOD = 0X20;     //8位重载
  17   1             TH1 = 256 - (Freq*1000000/BaudRate/16);        //在24M时，波特率为9600；
  18   1             TR1 = 1;
  19   1             EUART = 1;       //开启Uart0中断
  20   1             EA = 1;
  21   1             #else
                     P1CON &= 0xF3;
                     P1PH = 0X0C;   //TX/RX为带上拉输入；
              
                     PCON |= 0x80;    //SMOD = 1；
                     SCON = 0X50;     //设置通信方式为模式一，允许接收
                     T2CON = 0x36;    //使用定时器1作UART时钟
                     TMCON = 0X03;    //定时器时钟为Fsys
                     TMOD = 0X20;     //8位重载
                     TH2 = 256 - (Freq*1000000/BaudRate/16);        //在24M时，波特率为9600；
                     TR2 = 1;
                     EUART = 1;       //开启Uart0中断
                     EA = 1;
                     #endif
  35   1      }
  36          
  37          static void Send_Byte(unsigned char Byte)
  38          {
  39   1              SBUF = Byte;
  40   1              while(!(Uart0SendFlag));
  41   1              Uart0SendFlag = 0;
  42   1      }
  43          
  44          static unsigned char Send_Data(PROTOCOL_TX *p)
  45          {
  46   1             static unsigned char Cnts;
  47   1             for(Cnts = 0;Cnts < SENDBUFSIZE;Cnts ++)
  48   1             {
  49   2                    Send_Byte(p->Buf[Cnts]);
  50   2             }
  51   1             return 1;
  52   1      }
  53          
  54          unsigned char Protocol_Send(unsigned char addr,unsigned char id,unsigned int TX_DATA)
C51 COMPILER V9.59.0.0   BSP_UART                                                          05/07/2019 13:50:35 PAGE 2   

  55          {
  56   1             PROTOCOL_TX buf;
  57   1             memset(&buf,0,sizeof(buf));
  58   1             buf.Data_Format.ADDR = addr;
  59   1             buf.Data_Format.ID      = id;
  60   1             buf.Data_Format.DATA1 = Hight(TX_DATA);
  61   1             buf.Data_Format.DATA2 = Low(TX_DATA);
  62   1             buf.Data_Format.CHECKSUM = (unsigned char)(buf.Data_Format.ADDR + buf.Data_Format.ID +buf.Data_Format.DAT
             -A1 + buf.Data_Format.DATA2);
  63   1             buf.Data_Format.STOP1 = 0x0d;
  64   1             buf.Data_Format.STOP2 = 0x0a;
  65   1             return Send_Data(&buf);
  66   1      }
  67          
  68          
  69          
  70          /*****************************************************
  71          *函数名称：void UartInt(void) interrupt 4
  72          *函数功能：Uart0中断函数
  73          *入口参数：void
  74          *出口参数：void
  75          *****************************************************/
  76          void UartInt(void) interrupt 4
  77          {
  78   1             if(TI)
  79   1             {
  80   2                 TI=0;     
  81   2                 Uart0SendFlag = 1;
  82   2             }
  83   1             if(RI)
  84   1             {
  85   2                  RI=0;
  86   2                  Uart0ReceiveFlag = 1;
  87   2             }
  88   1      }
  89          
  90          
  91          
  92          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    216    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
